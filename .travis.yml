language: java
jdk:
- openjdk8
services:
- docker
before_install:
- docker pull openjdk:8-jdk-alpine
script:
- mvn test
- mvn clean package
after_success:
- export COMMIT=${TRAVIS_COMMIT::7}
- export TAG=`if [ ! -z "$TRAVIS_TAG" ]; then echo "$TRAVIS_TAG"; else echo "$TRAVIS_BRANCH--$COMMIT";
  fi`
- docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
- docker-compose build
- docker tag $IMAGE_NAME:latest $IMAGE_NAME:$TAG
- docker push $IMAGE_NAME:$TAG
- export TITLE="$IMAGE_NAME:$TAG is built properly and pushed to Dockerhub"
- export TIMESTAMP=`date`
- export GIT_LOG=`git log -1 --pretty=%B $COMMIT`
- export TEXT="[build version] $TAG<br />[datetime] $TIMESTAMP<br />[changelog] $GIT_LOG<br
  />"
after_failure:
- export TITLE="Travis:$TRAVIS_JOB_ID -- build job is failed"
- export TEXT=[datetime]:`date`
deploy:
  provider: heroku
  api_key:
    secure: "$HEROKU_API_KEY"
  app: my-springboot-helloworld13213
  on:
    tags: true
    repo: bongani-m/my-springboot-helloworld
after_deploy:
- "export TITLE=\"\U0001F389\U0001F389\U0001F389New version $TAG is deployed to Heroku
  production\U0001F389\U0001F389\U0001F389\""
- export TEXT=[datetime]:`date`
env:
  global:
  - secure: cSux5D+oCgMmUTiHOoAw4rz4WztZNoWYn5IRQBjogHOWUFm19veJKoQkjpDaJtHAddcs3gyFoWpiLYnTLfUlOZcrBbkIu9kZ3JKb+/m5f0x7Ho778jHM2+nF85TgP4Acs4BI2PWyrQac1rhRtxWA0mzVpang3/Spiph1nLc4+JJ1YGY261JQNBiFNoNQBOGPMmmxqcynKOMk/Wfy0lR3tM3MN+Rx/FB7XXsaWKQOGjXgbpGJ5VOGWKnlkelManaFUvTm2CAI4zkQrMSMiwsg82y1g3/cD1ohhL1ibbdBZSBPR6R8DEdij11zlKV6so53TNp1LUqkDfyyhgNAc5Zljx030JXtut3fyv7Wc/6q+e6sN6rRgfqe7KJ2v3u/dfkG6gMs1ecAKlWafxKBpoPe60j1pQvO438n/OqMfuVJScxWNUA3U9dwfAYBDsu0NX4yYC9ouCXbOZ2Yf2lm6XzNxq2kJpmBUUzr9yYTfLAe7Jut7czKfupvhCoYfT+K3t0uEt43akQYSxrPirfhGw4081lrT6Np/fjqGS/U/GWsrttGA4/iGVkXF3+yv+3yM8sfsS2Oa052VuYdhwf/LfMSPo9iF48tD0dWCvQ5v5YiW/bqMe3JPSnYQpDNRRuICAjfaV7uk501oemIfP9rm7nUqFobK2OnS1X61jI1wkV0gdk=
  - secure: AynaM1/wdegN/cZjR3R2bHwGWH+mdpF1yoxDA//tq4AhdMCaD71f6d52FqonmPpaAoXBO96X4UIYrex+btpDEdEC+pWpFCUvygCyjz/OcUjVTEsrZC7H/YKRBDssvnNph8YWbTkHvJ+JxXJ+GXAwmzmbhcsbhwSMRnzMaXUIeUryTeoqTxYEcj2lv3RopcfLM8wIj4aoTwnlM8PtrcE1oiEdCaTRAh3+bzNaMrnR390Qs2idu4SjMxQZ7l4ZpEB3HEZ2LTcEIEx+K2XoYmUDN42EI5UQ3MmFgCExgB4IexDsCO4hajxljAftAeuep4RyTsFi9PxRb26fWwLqNqrW9zc8hgmNwtpe1KHJ57Cq4XPftNOw8uK5xpTU3X+vckCv4VpBC2/SgFt4Na7G88vfkZwVO9p5zcFFI1Xex6gqRqlOSolidHqNvSu07EpVj27RqyTQs2DIsndjaufIXBFBpfNccZe7Hgjhdxzr0/LDPOuWhqtN31RSxWCQxoUIKvGjNCjQjzesFd71pt+VOOnUsjYMq6g1xoBvtPRKPUKvmUt3tYEmm8CDlET9Bh3MZ5ESbHYZXLHEtvf5/zaDSOxkaAqP6mteF+wlxfFHUtza4p9Lg81/eLEZqK4GbRso4y7V3gby5g1KS8ZHoHcHABgupq8Z73mqWdDYYykcYtXcSS8=
  - secure: DJjralxDJCmQXiLxy3ehGeJAPlHz1DANFDszLJussGnRb1hVbGwk5UoasrYOqiVzsBv/9cguvwPXV1aTlOD02jKLiGmh2VYiTkwyTbCC/ou4Xyo23x4nlW6L/PQhTubMSmCYa/TAlgdaUdv/rYNH5EPDxplYgaJCOosbyT91sUml/5Rfn+D9LDw6freBlUN3zZdVXHkJ0ptosHL7jHxmDJ+LsHPk9Dv3Z8QbnBds31K5xxJAT7IjDw5vO0+S2/S6vbN3P8rIqMv25j+UQVhFZoMfQnqqdhvajXnWQFt7FflmWe3EYSQdS9mWg3oxFANY6XiUQV1LHNE9I0D7Kg5FNDMTVZwHNRjgkKGAiy55CZhedX1d1sG321EShO2fzY1C1b1QXyoQMVG8BW6x5UmNyvRzuPynb+Ng1BJCSe/qog5adTV3oA8vtA6ZphDyDK3PDBRfnhnseVldZYzYF6bCUvOgZ6u73PXfF0WGpNkA0mzQ+nTuerE+RBLLPw/jeaj3UdvVRL4OsyDqJ8uZnce0ha9W1p/6nsk7rbSbpzC+wYHQ2h9tRq/WVMMW3QqEFXWWiEptxeACxYemHjryMJzZ7vPMWC1wVznNe/vPwLc3csngzLlDTHFDQ56xEqprwr7+t6z0pcZkIS5oiWyBvvbqzLJDifGvUwGPQkuPm5ASHmQ=
  - secure: k45P7hX7mK7t7XZSZe8tcU/TLYcZUvmZFLUbbCQQ15FmPVkgMq7i1iiK1ZCSq57zEf3u5JwsbZlku3oa6LxUhisgif9e4fcvmRolBF7pS/gfpRwnXRww57BbAc214k+UHeeoXhBoBokcNMXIyqCr5GqUBZOmmgVPuT0E+4rB8yFuVtMaFg7lKG+yyUHBsC1B8xLHLPAyDQeVui1GgDROldypZWQwlflHApQ+QYIom06sITlsDkdaMbC9k3WNWOCSCQ/VA5sFyfrIk4ELXJPkys85LWVna5TPj0gorA63SOrSaiFK8OJlhBBAGVX5R5GR7lwmJEEEMWUeYXFToPUOPFsvK8gE7h3uLDYLPdEV94RWvA4+jU09UnOeTkPHBiDtadv1djo6Kkhc1vZ+Vng53a6l4HNRU2NKqXarCpUmrEMzNXUu10EuVvv3kH51PXVBOxfx3bjR/JZCvedesTY32Ri65w7GW2uOv+7yqXCeWGrWaEWtYdzG6cVIi9m8I5J/z8YjBzZlPVySV2INeskJaX+EeuMN4gn3Ym/FzbGNwFj4W10uQT4ejx8dfNxD4cHyzAihHcy+3Oz9wTkrraUJF1ZCknDWu1bQ/3vOs3YVXOlADBlChcnviaSXQPicOY55cgN7eiinJ5mdkiXQGCCyJ54jT5mDOCO5u633rUXXobY=
  - secure: meCPayTFxyoqHqQTtppYi5HUEmQonWaEVYlncxty20N5lsAHj+a2hijT5+ZpOXyu5/Fvp8+gIsp08CULU02LZFnMAdcHJBZ6dqxQaDjz+wLKPyOp51xITMb1pGF1cs3nA85oijU7JHOVjDaiWfnQsURyQy7fC4LYb0vdQ9KgBc2/rxkOMGUySBRUwL9J6kmojIAtQZpdNXH1nk+Bhfu+eYLhCNxwOcELuo/kdRgC7nJX47qgRNTvA187qb18ktfo0x2ppw8g+jiRD1mo8x4uVTJEQgnWmiKSNjHeMzFa/AjBwZUdbwjSozZLEP2eCvFdw2YVbVEVc0SvzihJs7tSqDBz3GGa1djvyeVItIl8OwgUzFGkW/dNmtKlI2Is1OcwBNeigHDlyXQ/Ykso6YgRKsbouGcjc90wA2Xb9qfu3dokwXnnMkQSMJI3Ymy0bvsqonGF9F8yhyaC/dv4gnOzuSIIBRMAdyQ3W+ZZXbG3+Qnxfe5GJS0o1KSDo6kvfE3C/0vCsYPnayzu9vg2+AkseS1fOWSbACE48JRlQUjiGD5zZijkhIl3B8lN20ESOV89eVRA7v2pvP2nBxA7MbpVn2NUPUSZzO9uYOB9KX6Vpfc8QaMda9hAt1rX951tgH11BpQOs8Xn3Ol3jSHeiq982FmFS6TW6y1aMnI7IVC/Es0=
